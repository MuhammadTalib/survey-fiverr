{"version":3,"sources":["./src/app/components/mc-qs-option/mc-qs-option.component.ts","./src/app/components/mc-qs-option/mc-qs-option.component.html","./src/app/components/LoginPage/login-page/login-page.component.ts","./src/app/components/LoginPage/login-page/login-page.component.html","./src/environments/environment.ts","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/Services/httpInterceptor/httpconfig.interceptor.ts","./src/app/components/create-survey/create-survey.component.ts","./src/app/components/create-survey/create-survey.component.html","./src/app/components/Survey/survey.component.ts","./src/app/components/Survey/survey.component.html","./src/app/components/Dashboard/dashboard/dashboard.component.ts","./src/app/components/Dashboard/dashboard/dashboard.component.html","./src/app/Services/HTTPServices/httphandler.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/SignUpPage/sign-up/sign-up.component.ts","./src/app/components/SignUpPage/sign-up/sign-up.component.html","./src/app/app.module.ts","./src/app/components/HomePage/home/home.component.ts","./src/app/components/HomePage/home/home.component.html","./src/app/components/HomePage/home/dialog-overview-example-dialog.html","./src/app/components/MySurvey/survey.component.ts","./src/app/components/MySurvey/survey.component.html","./src/app/Services/user-data.service.ts","./src/app/app-routing.module.ts","./src/app/components/landing-page/landing-page.component.ts","./src/app/components/landing-page/landing-page.component.html","./src/app/components/survey-record/survey-record.component.ts","./src/app/components/survey-record/survey-record.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-mc-qs-option',\n  templateUrl: './mc-qs-option.component.html',\n  styleUrls: ['./mc-qs-option.component.css']\n})\nexport class McQsOptionComponent implements OnInit {\n\n  @Input() choices = []; \n  @Input() index:string; \n\n  @Input() showCheckBox:boolean; \n\n  @Output() choicesChange = new EventEmitter();\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  changeOption(){\n    this.choicesChange.emit(this.choices);\n  }\n  radioChangeMcqs(event){\n    // this.choices[this.index].answer = event.value;\n    var choices1 = this.choices\n    for(let i=0;i<this.choices.length;i++){\n      if(parseInt(this.index) === i){\n\n        choices1[i] = {\n          answer : true,\n          option : this.choices[i].option\n        }\n      }\n      else choices1[i] = {\n        \n        answer : false,\n        option : this.choices[i].option\n      }\n    }\n    this.choices = choices1\n    this.choicesChange.emit(this.choices);\n  }\n\n}\n","<!-- <mat-radio-button color=\"primary\" value=\"false\">\n    \n</mat-radio-button> -->\n<div *ngIf=\"showCheckBox\" class=\"checkbox\">\n    <mat-checkbox color=\"primary\" (change)=\"radioChangeMcqs($event)\"  class=\"example-margin \" [checked]=\"choices[index].answer\">\n        <mat-form-field class=\"mcqsoption\" appearance=\"outline\">\n            <mat-label>Option {{index+1}}</mat-label>\n            <input matInput placeholder=\"Placeholder\" [(ngModel)]=\"choices[index].option\" (change)=\"changeOption()\">\n        </mat-form-field>\n    </mat-checkbox>\n    \n</div>\n\n<div *ngIf=\"!showCheckBox\" class=\"checkbox\">\n    <mat-checkbox color=\"primary\" (change)=\"radioChangeMcqs($event)\"  class=\"example-margin \" [checked]=\"choices[index].answer\">\n        {{ choices[index].option }} \n       <!-- <mat-form-field class=\"mcqsoption\" appearance=\"outline\">\n            <mat-label>Option {{index+1}}</mat-label>\n            <input matInput placeholder=\"Placeholder\" [(ngModel)]=\"choices[index].option\" (change)=\"changeOption()\">\n        </mat-form-field> -->\n    </mat-checkbox>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserDataService } from 'src/app/Services/user-data.service';\nimport { HttphandlerService } from \"../../../Services/HTTPServices/httphandler.service\"\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor(\n    private http:HttphandlerService,\n    private router: Router,\n    private userDataService : UserDataService,\n    ) { }\n  hide:Boolean = true;\n  registered:Boolean= true\n  email:string=\"\"\n  password:string=\"\"\n  userData=null\n  \n  ngOnInit(): void {\n    this.userDataService.userData.subscribe(data => {\n      this.userData = data;\n      if(data) this.router.navigate(['/Dashboard'])\n    })    \n  }\n  login_page(){\n    console.log(\"login\",{\n      email:this.email,\n      password:this.password\n    })\n    this.http.apiPost('/user/login',{\n      email:this.email,\n      password:this.password\n    }).subscribe((res:any)=>{\n      console.log(\"res\",res)\n      this.userDataService.updateUser(res.user)\n      localStorage.setItem(\"token\",res.token)\n      localStorage.setItem(\"userData\",JSON.stringify(res.user))\n      // this.router.navigate(['/Dashboard'])\n    },\n    console.error\n    )\n  }\n  handleSignUpClick(){\n    // this.registered=false;\n    this.router.navigate(['/signup'])\n  }\n}\n","<div *ngIf=\"registered\" class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n    <mat-card class=\"box\">\n      <mat-card-header class=\"mat-card-haeder-1\">\n        <mat-card-title class=\"login-header\">Log in</mat-card-title>\n      </mat-card-header>\n  \n        <mat-card-content>\n\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input matInput placeholder=\"Email\" [(ngModel)]=\"email\" type=\"email\">\n          </mat-form-field>\n  \n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" [(ngModel)]=\"password\">\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n          </mat-form-field>\n        </mat-card-content>\n        <div class=\"new-user-note\">\n          Are you New Here? \n          <span>    <button mat-button color=\"warn\" class=\"signup-button\" (click)=\"handleSignUpClick()\">SIGN UP HERE</button>          </span>\n        </div>\n\n        <button mat-raised-button color=\"primary\" class=\"btn-block\" (click)=\"login_page()\">Log in</button>\n\n      <!-- </form> -->\n    </mat-card>\n</div>\n<!-- <app-sign-up *ngIf=\"!registered\"></app-sign-up> -->\n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { HttphandlerService } from 'src/app/Services/HTTPServices/httphandler.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private http:HttphandlerService) { }\n  user:{\n    name:\"\",\n    email:\"\",\n    _id:\"\",\n    password:\"\"\n  }\n  hide = true\n  ngOnInit(): void {\n    let userData = JSON.parse(localStorage.getItem('userData'))\n    if(userData){\n      this.user = {\n        name:userData.name,\n        _id:userData._id,\n        email:userData.email,\n        password:\"\"\n      }\n    }else{\n      this.http.apiPost('/users/logout',{}).subscribe((res:any)=>{\n        localStorage.clear();\n      })\n    }\n    \n  }\n  updateUser(){\n    let data={\n      name: this.user.name,\n      email:this.user.email\n    }\n    if(this.user.password.length>6) data[\"password\"] = this.user.password;\n\n    this.http.apiPost('/users/me',data).subscribe((res:any)=>{\n      console.log(\"rees\",res)\n    })\n  }\n\n}\n","<div  class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n    <mat-card class=\"box\">\n      <mat-card-header class=\"mat-card-haeder-1\">\n        <mat-card-title class=\"login-header\">My Profile</mat-card-title>\n      </mat-card-header>\n  \n        <mat-card-content>\n\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Full Name</mat-label>\n                <input matInput placeholder=\"Username\" [(ngModel)]=\"user.name\" type=\"email\">\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Email</mat-label>\n                <input matInput placeholder=\"Email\" [(ngModel)]=\"user.email\" type=\"email\">\n            </mat-form-field>\n    \n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Change Password</mat-label>\n                <input matInput [type]=\"hide ? 'password' : 'text'\" [(ngModel)]=\"user.password\">\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n            </mat-form-field>\n\n\n        </mat-card-content>\n        \n        <button mat-raised-button color=\"primary\" class=\"btn-block\" (click)=\"updateUser()\">Save</button>\n\n      <!-- </form> -->\n    </mat-card>\n</div>","\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { EMPTY } from 'rxjs';\r\nimport {\r\n    HttpInterceptor,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HttpConfigInterceptor implements HttpInterceptor {\r\n    constructor(\r\n        public router: Router) { }\r\n\r\n   \r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        let loadingExists  :any;\r\n        const routeURL = request.headers.get('routeURL');\r\n        const token: string = localStorage.getItem('token');\r\n        if (token) {\r\n            request = request.clone({ headers: request.headers.set('Authorization', 'Bearer ' + token) });\r\n            if (request.url == \"/\") {\r\n                this.router.navigate(['Home']);\r\n                return EMPTY;\r\n            }\r\n        }\r\n        else {\r\n            if (request.url.substr(-10) == \"User/Login\" || request.url.substr(-23) == \"User/forgetUserPassword\") {\r\n                console.log('Either Login or Forgot Password request')\r\n            }\r\n            else {\r\n                localStorage.removeItem('token');  \r\n                localStorage.removeItem('userData'); \r\n                this.router.navigate(['']);\r\n                return EMPTY;\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            next.handle(request).pipe(\r\n                map((event: HttpEvent<any>) => {\r\n                    if (event instanceof HttpResponse) {\r\n                        if (!request.body || (request.body && !request.body.isLoderHide && loadingExists)) {\r\n                        }\r\n                        let token_tk = event.headers.get('token_tk');\r\n                        if(token_tk){\r\n                            localStorage.setItem('token', token_tk);\r\n                        }                        \r\n                    }\r\n                    return event;\r\n                }),\r\n                catchError((error: HttpErrorResponse) => {\r\n                    \r\n                    if (!request.body || (request.body && !request.body.isLoderHide && loadingExists)) {\r\n                    }\r\n\r\n                    \r\n                    if(error.status == 401){                        \r\n                        localStorage.removeItem('token');  \r\n                        localStorage.removeItem('userData');                        \r\n                        \r\n                        this.router.navigate(['']);\r\n                        return EMPTY;\r\n                    }\r\n                    if(error.status == 403){\r\n                    }\r\n                    return throwError(error);\r\n                }))\r\n        )\r\n    }\r\n}\r\n","import { NullTemplateVisitor } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { HttphandlerService } from \"../../Services/HTTPServices/httphandler.service\"\n\n@Component({\n  selector: 'app-create-survey',\n  templateUrl: './create-survey.component.html',\n  styleUrls: ['./create-survey.component.css']\n})\nexport class CreateSurveyComponent implements OnInit {\n\n  title:string=\"\"\n  description:string=\"\"\n  user:{}\n  choices=null\n  surveyType:string = null\n  startDate\n  endDate\n  questions=[]\n  \n  addQuestion(){\n    if(this.surveyType===\"mcqs\") this.questions.push({title:'',options:  [{option:\"\",answer:false},{option:\"\",answer:false}]})\n    else if(this.surveyType === \"shortanswer\") this.questions.push({title:'',options: \"\"})\n    else if(this.surveyType===\"agreedisagree\") this.questions.push({title:'',options: \"\"})\n  }\n  addChoice(i){\n    this.questions[i].options.push({option:\"\",answer:false})\n  }\n  radioChange(event){\n    console.log(\"event\",event.value)\n    this.surveyType= event.value\n    if(event.value===\"mcqs\") this.questions = [{title:'',options:  [{option:'',answer:false},{option:'',answer:false}]}]\n    else if(event.value === \"shortanswer\") this.questions = [{title:'',options: \"\"}]\n    else if(event.value===\"agreedisagree\") this.questions = [{title:'',options: \"\"}]\n  }\n  saveSurvey(){\n    let data={\n      title       : this.title,\n      description : this.description,\n      type        : this.surveyType,\n      questions   : this.questions,\n      startDate   : this.startDate,\n      endDate     : this.endDate\n    }\n    this.user && (data['createdBy'] = this.user)\n    this.choices && (data['options'] = this.choices)\n    this.http.apiPost('/survey/create',data).subscribe((res:any)=>{\n      this.title=\"\"\n      this.description=\"\"\n      this.choices=null\n      this.surveyType = \"\",\n      this.startDate = this.startDate,\n      this.endDate = this.endDate,\n      this.questions=[]\n    })\n  }\n  constructor(private http:HttphandlerService) {\n    let userData = JSON.parse(localStorage.getItem('userData'))\n    this.user = {\n      name:userData.name,\n      _id:userData._id\n    }\n    // const today = new Date();\n    // const month = today.getMonth();\n    // const year = today.getFullYear();\n\n    // this.campaignOne = new FormGroup({\n    //   start: new FormControl(new Date(year, month, 13)),\n    //   end: new FormControl(new Date(year, month, 16))\n    // });\n\n    // this.campaignTwo = new FormGroup({\n    //   start: new FormControl(new Date(year, month, 15)),\n    //   end: new FormControl(new Date(year, month, 19))\n    // });\n  }\n  \n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"createSurveyWrapper\">\n    <div class=\"createsurverheader\">Create Survey</div>\n\n    <mat-radio-group class=\"radiogrup\" aria-label=\"Select an option\" [(ngModel)]=\"surveyType\">\n        <mat-label class=\"surverytype\">Choose any survey Template: </mat-label>\n        <mat-radio-button (change)=\"radioChange($event)\" class=\"type-button\" color=\"primary\" value=\"mcqs\">Multiple Choice</mat-radio-button>\n        <mat-radio-button (change)=\"radioChange($event)\" class=\"type-button\" color=\"primary\" value=\"shortanswer\">Short Answers</mat-radio-button>\n        <mat-radio-button (change)=\"radioChange($event)\" class=\"type-button\" color=\"primary\" value=\"agreedisagree\">Agree/Disagree</mat-radio-button>\n    </mat-radio-group>\n\n    <mat-form-field class=\"example-full-width createsurveytextboxes\" appearance=\"outline\">\n        <mat-label>Title</mat-label>\n        <input matInput placeholder=\"Title\" [(ngModel)]=\"title\">\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width createsurveytextboxes\" appearance=\"outline\">\n        <mat-label>Description</mat-label>\n        <textarea class=\"desc-textarea\" matInput placeholder=\"Description\" [(ngModel)]=\"description\"></textarea>\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width createsurveytimetextboxes\" appearance=\"outline\">\n        <mat-label>Start Date</mat-label>\n        <input matInput type=\"datetime-local\" placeholder=\"start date\" [(ngModel)]=\"startDate\">\n        <!-- <input matInput placeholder=\"StartDate\" > -->\n    </mat-form-field>\n\n    <mat-form-field class=\"example-full-width createsurveytimetextboxes rigthtime\" appearance=\"outline\">\n        <mat-label>End Date</mat-label>\n        <input matInput type=\"datetime-local\" placeholder=\"end date\" [(ngModel)]=\"endDate\">\n        <!-- <input matInput placeholder=\"StartDate\" > -->\n    </mat-form-field>\n\n    <!-- <mat-form-field>\n        <input matInput type=\"datetime-local\" placeholder=\"start date\">\n    </mat-form-field> -->\n    <!-- <mat-form-field>\n        <input \n            matInput \n            [ngxMatDatetimePicker]=\"picker\" \n            placeholder=\"Choose a date\" \n            [formControl]=\"dateControl\"\n            [min]=\"minDate\" \n            [max]=\"maxDate\" \n            [disabled]=\"false\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <ngx-mat-datetime-picker #picker [showSpinners]=\"showSpinners\" [showSeconds]=\"showSeconds\"\n           [stepHour]=\"stepHour\" [stepMinute]=\"stepMinute\" [stepSecond]=\"stepSecond\">\n        </ngx-mat-datetime-picker>\n     </mat-form-field> -->\n\n    <button *ngIf=\"surveyType\" mat-raised-button color=\"primary\" class=\"addquestionbutton\" (click)=\"addQuestion()\">Add Question</button>\n\n    <div *ngFor=\"let question of questions,let i = index\">\n        <div class=\"question-header\"> Question {{i+1}}: </div>\n\n        <mat-form-field class=\"example-full-width createsurveytextboxes\" appearance=\"outline\">\n            <mat-label>Question</mat-label>\n            <input matInput placeholder=\"question.title\" [(ngModel)]=\"question.title\">\n        </mat-form-field>\n\n        <div *ngIf=\"surveyType==='mcqs'\" class=\"optionsBox\">\n            <button mat-raised-button color=\"primary\" class=\"addchoicebutton\" (click)=\"addChoice(i)\">Add Choice</button>\n            <mat-radio-group aria-label=\"Select an option\" >\n                <app-mc-qs-option *ngFor=\"let choice of question.options,let i = index\" [showCheckBox]='true' [(choices)]=\"question.options\" [index]='i'></app-mc-qs-option>\n            </mat-radio-group>\n        </div>\n    \n        <div *ngIf=\"surveyType==='shortanswer'\" class=\"optionsBox\">\n            <mat-form-field class=\"example-full-width createsurveytextboxes\" appearance=\"outline\">\n                <mat-label>Your Response</mat-label>\n                <input matInput placeholder=\"Your Response\" [(ngModel)]=\"question.options\">\n            </mat-form-field>    \n        </div>\n    \n        <div *ngIf=\"surveyType==='agreedisagree'\" class=\"optionsBox\">\n            <mat-radio-group class=\"radiogrup\" aria-label=\"Select an option\" [(ngModel)]=\"question.options\">\n                <mat-radio-button class=\"type-button\" color=\"primary\" value=\"true\">Agree</mat-radio-button>\n                <mat-radio-button class=\"type-button\" color=\"primary\" value=\"false\">Disagree</mat-radio-button>\n            </mat-radio-group>\n            <!-- <app-mc-qs-option [showCheckBox]='false' [(choices)]=\"question.options\" [index]='i'></app-mc-qs-option> -->\n        </div>\n    </div>\n\n   \n\n\n    <!-- <mat-form-field class=\"example-form-field\" appearance=\"fill\">\n        <mat-label class=\"surveryLifetime\">Lifetime: </mat-label>\n        <mat-date-range-input\n          [formGroup]=\"campaignOne\"\n          [rangePicker]=\"campaignOnePicker\"\n          [comparisonStart]=\"campaignOne.value.start\"\n          [comparisonEnd]=\"campaignOne.value.end\">\n          <input matStartDate placeholder=\"Start date\" formControlName=\"start\">\n          <input matEndDate placeholder=\"End date\" formControlName=\"end\">\n        </mat-date-range-input>\n        <mat-datepicker-toggle matSuffix [for]=\"campaignOnePicker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #campaignOnePicker></mat-date-range-picker>\n    </mat-form-field> -->\n\n    <button *ngIf=\"surveyType\" mat-raised-button color=\"primary\" class=\"saveSurveyButton\" (click)=\"saveSurvey()\">Save Record</button>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttphandlerService } from 'src/app/Services/HTTPServices/httphandler.service';\n\n@Component({\n  selector: 'app-survey',\n  templateUrl: './survey.component.html',\n  styleUrls: ['./survey.component.css']\n})\nexport class SurveyComponent implements OnInit {\n\n  user:{}\n\n  constructor(private router: Router,private route: ActivatedRoute ,private http: HttphandlerService) {\n    let userData = JSON.parse(localStorage.getItem('userData'))\n    this.user = {\n      name:userData.name,\n      _id:userData._id\n    }\n   }\n  survey:any\n  ngOnInit(): void {\n    this.survey = JSON.parse(this.route.snapshot.paramMap.get('survey'));\n    if(this.survey.type!=='shortanswer') {\n      this.survey.questions = this.survey && this.survey.questions.map(q=>{\n        return { ...q, options:q.options.map(o=>{\n          return {...o,answer:false}\n        })}\n      })\n    }else{\n      this.survey.questions = this.survey && this.survey.questions.map(q=>{\n        return { ...q, options:['']}\n      })\n    }\n      \n  }\n  saveSurvey(){\n    let data=this.survey\n    console.log(\"survey\",data)\n\n    this.user && (data['performedBy'] = this.user)\n    data['surveyID']=this.survey._id\n    this.http.apiPost('/surveyResponse/save',data).subscribe((res:any)=>{\n      this.router.navigate(['/Dashboard']);\n    })\n  }\n\n}\n","<div class=\"survey-mock-wrapper\">\n\n    <div class=\"survey-title\">{{survey.title}}</div>\n    <div class=\"survey-desc-head\">Description:</div>\n    <div class=\"survey-desc\">{{survey.description}}</div>\n\n    <div *ngFor=\"let question of survey.questions,let i = index\">\n        <div>\n            <div class=\"question-header\"> Question {{i+1}}: </div>\n            <div class=\"question-qno\"> {{question.title}} </div>\n        </div>\n\n        <div *ngIf=\"survey.type==='mcqs'\" class=\"optionsBox\">\n            <app-mc-qs-option *ngFor=\"let choice of question.options,let i = index\"  [showCheckBox]='false' [(choices)]=\"question.options\" [index]='i'></app-mc-qs-option>\n        </div>\n    \n        <div *ngIf=\"survey.type==='shortanswer'\" class=\"optionsBox\">\n            <mat-form-field class=\"example-full-width fillsurveytextbox\" appearance=\"outline\">\n                <mat-label>Your Response</mat-label>\n                <input matInput placeholder=\"Your Response\" [(ngModel)]=\"question.options[0]\">\n            </mat-form-field>    \n        </div>\n    \n        <div *ngIf=\"survey.type==='agreedisagree'\" class=\"optionsBox\">\n            <mat-radio-group class=\"radiogrup\" aria-label=\"Select an option\" [(ngModel)]=\"question.options\">\n                <mat-radio-button class=\"agree-button\" color=\"primary\" value=\"true\">Agree</mat-radio-button>\n                <mat-radio-button class=\"agree-button\" color=\"primary\" value=\"false\">Disagree</mat-radio-button>\n            </mat-radio-group>\n        </div> \n\n        <!-- <div *ngIf=\"survey.type==='agreedisagree'\" class=\"optionsBox\">\n            <mat-radio-group class=\"radiogrup\" aria-label=\"Select an option\" [(ngModel)]=\"question.options\">\n                <mat-radio-button class=\"agree-button\" color=\"primary\" value=\"true\">Agree</mat-radio-button>\n                <mat-radio-button class=\"agree-button\" color=\"primary\" value=\"false\">Disagree</mat-radio-button>\n            </mat-radio-group>\n        </div>  -->\n    </div>\n\n   \n\n    <button mat-raised-button color=\"primary\" class=\"saveSurveyButton\" (click)=\"saveSurvey()\">Save Record</button>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserDataService } from 'src/app/Services/user-data.service';\nimport { HttphandlerService } from \"../../../Services/HTTPServices/httphandler.service\"\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(\n    private http:HttphandlerService,\n    private userDataService : UserDataService,\n    private router: Router\n    ) { }\n\n  limit = 10;\n  skip = 0;\n  count = 0\n  totalDocCounts=0\n  surveys=[]\n  userData = null\n\n  ngOnInit(): void {\n    this.userDataService.userData.subscribe(data => {\n      this.userData = data;\n    })\n    this.http.apiGet(`/survey/getAll/${this.limit}/${this.skip}`).subscribe((res:any)=>{\n      this.totalDocCounts = res.count\n      this.surveys = res.surveys\n      this.count = res.count\n    })\n  }\n  handlePage(event){\n    console.log(\"event\",event)\n  }\n  checkSignInFirst(survey:any){\n    if(this.userData){\n      this.mockSurvey(survey)\n    }else{\n      this.router.navigate(['/login'])\n    }\n  }\n  mockSurvey(survey:any){\n    this.router.navigate(['/Survey',{survey:JSON.stringify(survey)}], );\n  }\n\n}\n","<div class=\"dashboard-main-wrapper\">\r\n\r\n    <button \r\n        *ngFor=\"let survey of surveys, let i = index\" \r\n        mat-raised-button class=\"dashboard-card\"\r\n        (click)=\"checkSignInFirst(survey)\"\r\n        >{{survey.title}}</button>\r\n\r\n    <!-- <mat-paginator *ngIf=\"count\" class=\"paginator\" \r\n            [length]=\"totalDocCounts\"\r\n            (page)=\"pageEvent = handlePage($event)\"\r\n            [pageSize]=\"limit\"\r\n            [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n    </mat-paginator> -->\r\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nconst basicUrl = \"/api\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttphandlerService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  apiGet(routeURL, content_type?, isCompleteURI?) {\n    const headers = new HttpHeaders().set(\"X-CustomHttpHeader\", \"CUSTOM_VALUE\");\n    const obj: any = {};\n    if (!content_type) {\n      headers.append('Content-Type', 'application/json');\n    }\n    else {\n      obj.responseType = 'text';\n    }\n    obj.headers = headers;\n    let uri = basicUrl + routeURL;\n    if (isCompleteURI) {\n      uri = routeURL;\n    }\n    return this.httpClient.get(uri, obj)\n  };\n\n  apiPut(routeURL, putData) {\n    const headers = new HttpHeaders().set(\"X-CustomHttpHeader\", \"CUSTOM_VALUE\");\n    headers.append('Content-Type', 'application/json');\n    return this.httpClient.put(basicUrl + routeURL, putData, { headers })\n  }\n\n  apiDelete(routeURL) {\n    const headers = new HttpHeaders().set(\"X-CustomHttpHeader\", \"CUSTOM_VALUE\");\n    headers.append('Content-Type', 'application/json');\n    return this.httpClient.delete(basicUrl + routeURL, { headers })\n  }\n\n  apiPost(routeURL, postData, content_type?) {\n    const headers = new HttpHeaders().set(\"X-CustomHttpHeader\", \"CUSTOM_VALUE\");\n    const obj: any = {};\n    if (!content_type) {\n      headers.append('Content-Type', 'application/json');\n    }\n    else {\n      obj.responseType = 'text';\n    }\n    obj.headers = headers;\n    return this.httpClient.post(basicUrl + routeURL, postData, obj)\n  }\n\n}\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'survey-frontend';\n  constructor(){\n    localStorage.setItem(\"token\",\"dwyb\")\n  }\n  isAuthorized(){\n    return localStorage.getItem(\"userData\")\n  }\n}\n","<!-- <app-login-page *ngIf=\"!isAuthorized()\"></app-login-page> -->\r\n<app-landing-page ></app-landing-page>\r\n<!-- <app-home *ngIf=\"isAuthorized()\"></app-home> -->","import { ConstantPool } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserDataService } from 'src/app/Services/user-data.service';\nimport { HttphandlerService } from \"../../../Services/HTTPServices/httphandler.service\"\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  hide:Boolean = true;\n  Username:string=\"\"\n  email:string=\"\"\n  password:string=\"\"\n  confirmpassword=\"\"\n  registered:Boolean= false\n\n  constructor(\n    private http:HttphandlerService,\n    private router: Router,\n    private userDataService : UserDataService\n    ) { }\n\n  ngOnInit(): void {\n    this.userDataService.userData.subscribe(data => {\n      if(data) this.router.navigate(['/Dashboard'])\n    })\n  }\n  signUp(){\n    console.log(\"signup\",{\n      name:this.Username,\n      email:this.email,\n      password:this.password\n    })\n    this.http.apiPost('/user/create',{\n      name:this.Username,\n      email:this.email,\n      password:this.password\n    }).subscribe((res:any)=>{\n      console.log(\"res\",res)\n      this.userDataService.updateUser(res.user)\n      localStorage.setItem(\"token\",res.token)\n      localStorage.setItem(\"userData\",JSON.stringify(res.user))\n      // this.router.navigate(['/Dashboard'])\n    })\n  }\n  handleLoginClick(){\n    this.router.navigate(['/login'])\n  }\n\n}\n","<div  *ngIf=\"!registered\"   class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n    <mat-card class=\"box\">\n      <mat-card-header class=\"mat-card-haeder-1\">\n        <mat-card-title class=\"login-header\">Sign Up</mat-card-title>\n      </mat-card-header>\n  \n        <mat-card-content>\n\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Full Name</mat-label>\n                <input matInput placeholder=\"Username\" [(ngModel)]=\"Username\" type=\"name\">\n            </mat-form-field>\n\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Email</mat-label>\n                <input matInput placeholder=\"Email\" [(ngModel)]=\"email\" type=\"email\">\n            </mat-form-field>\n    \n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Password</mat-label>\n                <input matInput [type]=\"hide ? 'password' : 'text'\" [(ngModel)]=\"password\">\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n            </mat-form-field>\n\n\n        </mat-card-content>\n        <div class=\"new-user-note\">\n          Already Registered \n          <span>    <button mat-button color=\"warn\" class=\"signup-button\" (click)=\"handleLoginClick()\">LOGIN HERE</button>          </span>\n        </div>\n\n        <button mat-raised-button color=\"primary\" class=\"btn-block\" (click)=\"signUp()\">Sign Up</button>\n\n      <!-- </form> -->\n    </mat-card>\n</div>\n<!-- <app-login-page *ngIf=\"registered\" ></app-login-page> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginPageComponent } from './components/LoginPage/login-page/login-page.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SignUpComponent } from './components/SignUpPage/sign-up/sign-up.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS  } from '@angular/common/http';\nimport { HttpConfigInterceptor } from './Services/httpInterceptor/httpconfig.interceptor';\nimport { HomeComponent } from './components/HomePage/home/home.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { DashboardComponent } from './components/Dashboard/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { CreateSurveyComponent } from './components/create-survey/create-survey.component';\nimport { MatRadioModule} from '@angular/material/radio';\n// import { MatDatepickerModule} from '@angular/material/datepicker';\n// import { MatNativeDateModule} from '@angular/material/core'\nimport { ReactiveFormsModule, FormControl, FormsModule } from '@angular/forms';\n// import { NgxMatDatetimePickerModule, NgxMatTimepickerModule } from 'ngx-mat-datetime-picker';\nimport { McQsOptionComponent } from './components/mc-qs-option/mc-qs-option.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MySurveyComponent } from './components/MySurvey/survey.component';\nimport { SurveyComponent } from './components/Survey/survey.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { SurveyRecordComponent } from './components/survey-record/survey-record.component';\nimport { LandingPageComponent } from './components/landing-page/landing-page.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { DialogOverviewExampleDialog } from \"./components/HomePage/home/home.component\"\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginPageComponent,\n    SignUpComponent,\n    HomeComponent,\n    DashboardComponent,\n    MySurveyComponent,\n    SurveyComponent,\n    ProfileComponent,\n    CreateSurveyComponent,\n    McQsOptionComponent,\n    SurveyRecordComponent,\n    DialogOverviewExampleDialog,\n    LandingPageComponent  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatSelectModule,\n    AppRoutingModule,\n    MatInputModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatRadioModule,\n    MatDialogModule,\n    // MatDatepickerModule,\n    // MatNativeDateModule,\n    ReactiveFormsModule, \n    // NgxMatTimepickerModule,\n    // NgxMatDatetimePickerModule,\n    MatPaginatorModule,\n    MatCheckboxModule\n    // FormControl \n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: HttpConfigInterceptor, multi: true },\n    // MatDatepickerModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit ,Inject} from '@angular/core';\nimport { HttphandlerService } from \"../../../Services/HTTPServices/httphandler.service\"\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { UserDataService } from 'src/app/Services/user-data.service';\nimport { Router } from '@angular/router';\n// import image from \"../../../images/back.jpg\"\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private http:HttphandlerService,\n    private router: Router,\n    public dialog: MatDialog,\n    private userDataService : UserDataService) { }\n  userData = null\n\n  ngOnInit(): void {\n    this.userDataService.userData.subscribe(data => {\n      this.userData = data;\n    })\n  }\n  \n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: '500px',\n      // data: {name: this.name, animal: this.animal}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      // this.animal = result;\n    });\n  }\n  checkSignIn(route){\n    if(this.userData){\n      this.router.navigate([route]);\n    }else{\n      this.router.navigate(['/login'])\n    }\n  }\n  login(){\n    this.router.navigate(['/login']);\n  }\n  logout(){\n    this.http.apiPost('/users/logout',{}).subscribe((res:any)=>{\n      console.log(\"res\",res)\n      localStorage.clear();\n      this.userDataService.updateUser(null);\n      window.location.reload();\n    })\n  }\n\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n  styleUrls: ['./home.component.css']\n})\nexport class DialogOverviewExampleDialog {\n\n  \n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ,private userDataService : UserDataService\n    ) {\n\n      this.dialogRef.afterClosed().subscribe(result => {\n        console.log(\"result\",result)\n      });\n    }\n    ngOnInit(): void {\n      \n    }\n\n    \n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","\n<div >\n\n  <mat-toolbar class=\"toolbar\" color=\"primary\">\n    <button (click)=\"drawer.toggle()\" mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>Survey</span>\n    <span class=\"example-spacer\"></span>\n    \n    <button *ngIf=\"!userData\" mat-raised-button class=\"loginSignup\" (click)=\"login()\">LOGIN</button>\n    <button *ngIf=\"userData\" mat-raised-button class=\"loginSignup\" (click)=\"logout()\">LOGOUT</button>\n\n  </mat-toolbar>\n\n      \n  <mat-drawer-container class=\"example-container\" [hasBackdrop]=\"false\">\n    <mat-drawer class=\"drawer\" #drawer>\n      <div class=\"drawer-inner-div\">\n        <button class=\"navbar-button\" mat-raised-button color=\"primary\" routerLink=\"Dashboard\">Dashboard</button>\n        <button class=\"navbar-button\" mat-raised-button color=\"primary\" (click)=\"checkSignIn('MySurvey')\">My Survey</button>\n        <button class=\"navbar-button\" mat-raised-button color=\"primary\" (click)=\"checkSignIn('Profile')\">Profile</button>\n      </div>\n    </mat-drawer>\n    <mat-drawer-content class=\"ddrawer-conent\">\n      <router-outlet></router-outlet>\n    </mat-drawer-content>\n  </mat-drawer-container>\n\n\n</div>","<!-- <h1 mat-dialog-title>Hi {{data.name}}</h1> -->\r\n<div class=\"main-dialog-div\">\r\n  <div mat-dialog-content width=\"300\" class=\"dialog-width\">\r\n    <app-login-page></app-login-page>\r\n  \r\n  </div>\r\n  <!-- <div mat-dialog-actions> -->\r\n    <!-- <app-login-page></app-login-page> -->\r\n    <!-- <button mat-button (click)=\"onNoClick()\">No Thanks</button> -->\r\n    <!-- <button mat-button [mat-dialog-close]=\"data.animal\" cdkFocusInitial>Ok</button> -->\r\n  <!-- </div> -->\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttphandlerService } from 'src/app/Services/HTTPServices/httphandler.service';\n\n@Component({\n  selector: 'app-my-survey',\n  templateUrl: './survey.component.html',\n  styleUrls: ['./survey.component.css']\n})\nexport class MySurveyComponent implements OnInit {\n\n  user={_id:\"\",name:\"\"}\n  surveys=[]\n\n  limit = 10;\n  skip = 0;\n  count = 0\n  totalDocCounts=0\n\n  constructor(private router: Router,private http:HttphandlerService) { \n    let userData = JSON.parse(localStorage.getItem('userData'))\n    if(userData) {\n      this.user = {\n        name:userData.name,\n        _id:userData._id\n      }\n    }else{\n      this.router.navigate(['/login'])\n    }\n  }\n\n  ngOnInit(): void {\n    this.http.apiGet(`/user/survey/${this.user._id}/${this.limit}/${this.skip}`).subscribe((res:any)=>{\n      this.surveys = res.survey\n      this.count = res.count\n    })\n  }\n\n  navigateToCreate(){\n    this.router.navigate(['/CreateSurvey']);\n  }\n  navigateToRecord(survey){\n    this.router.navigate(['/SurveyRecord' ,{survey:JSON.stringify(survey)}]);\n  }\n  handlePage(event){\n    console.log(\"event\",event)\n  }\n\n}\n","<div class=\"survey-main-wrapper\">\n    <button mat-raised-button color=\"primary\" class=\"createsurvey\" (click)=\"navigateToCreate()\">Create Survey</button>\n    <button \n        *ngFor=\"let survey of surveys, let i = index\" \n        mat-raised-button class=\"dashboard-card\"\n        >\n        <div class=\"survey-ttitle\">{{survey.title}}</div>\n        <button mat-raised-button color=\"primary\" class=\"record\" (click)=\"navigateToRecord(survey)\">Record</button>\n    </button>\n\n    <!-- <mat-paginator *ngIf=\"count\" class=\"paginator\" \n            [length]=\"totalDocCounts\"\n            (page)=\"pageEvent = handlePage($event)\"\n            [pageSize]=\"limit\">\n    </mat-paginator> -->\n\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n  private userDataSource\n  userData\n  constructor() {\n    var struser = localStorage.getItem(\"userData\")\n    console.log(\"struser\",struser)\n    var user = JSON.parse(struser)\n    console.log(\"user\",user)\n    user &&( this.userDataSource = new BehaviorSubject<any>(user))\n    !user &&( this.userDataSource = new BehaviorSubject<any>(null))\n    this.userData = this.userDataSource.asObservable()\n   }\n\n   \n\n  updateUser(data: Location){\n    this.userDataSource.next(data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateSurveyComponent } from './components/create-survey/create-survey.component';\nimport { DashboardComponent } from './components/Dashboard/dashboard/dashboard.component';\nimport { LoginPageComponent } from './components/LoginPage/login-page/login-page.component';\nimport { MySurveyComponent } from './components/MySurvey/survey.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { SignUpComponent } from './components/SignUpPage/sign-up/sign-up.component';\nimport { SurveyRecordComponent } from './components/survey-record/survey-record.component';\nimport { SurveyComponent } from './components/Survey/survey.component';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent },\n  { path: 'login', component: LoginPageComponent },\n  { path: 'signup', component: SignUpComponent },\n  { path: 'Dashboard', component: DashboardComponent },\n  { path: 'MySurvey', component: MySurveyComponent },\n  { path: 'Survey', component: SurveyComponent},\n  { path: 'Profile', component: ProfileComponent },\n  { path: 'CreateSurvey', component: CreateSurveyComponent },\n  { path: 'SurveyRecord', component: SurveyRecordComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-home></app-home>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttphandlerService } from 'src/app/Services/HTTPServices/httphandler.service';\n\n@Component({\n  selector: 'app-survey-record',\n  templateUrl: './survey-record.component.html',\n  styleUrls: ['./survey-record.component.css']\n})\nexport class SurveyRecordComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute ,private router: Router ,private http:HttphandlerService) { }\n  survey : any\n  surveyRecords:[]\n  rec:[]\n  ric\n  questions = []\n  // shortanswerquestions=[]\n  surveyType = null\n  ngOnInit(): void {\n    this.survey = JSON.parse(this.route.snapshot.paramMap.get('survey'))\n    this.http.apiGet(`/surveyResponse/getFromSurveyID/${this.survey._id}`).subscribe((res:any)=>{\n      this.surveyRecords = res.survey\n      const rec = res.survey\n      this.surveyType=res.survey[0].type\n      if(res.survey[0].type===\"agreedisagree\"){\n        console.log(\"agreedisagree\")\n        const ric = res.survey[0].questions.map(m=>{\n          return {\n            title:m.title,\n            _id:m._id,\n            options:[\n              {option:\"Agree\",count:0},\n              {option:'Disagree',count:0}\n            ]\n          }\n\n        })\n        this.questions = ric\n      } else if(res.survey[0].type===\"mcqs\"){\n        console.log(\"mcqs\")\n        this.questions = res.survey[0].questions.map(m=>{\n          return {\n            title:m.title,\n            _id:m._id,\n            options:m.options.map(op=>{return{...op,count:0}}),\n          }\n        })\n      } else {\n        console.log(\"shortanswer\")\n        this.questions = res.survey[0].questions.map(m=>{\n          return {\n            title:m.title,\n            _id:m._id,\n            options:[]\n          }\n        })\n      }\n      if(res.survey.length) for(let sur=0;sur<res.survey.length;sur++){\n        for(let qno=0;qno<res.survey[sur]?.questions.length;qno++){\n          for(let opt=0;opt<res.survey[sur]?.questions[qno].options.length;opt++){\n            if(res.survey[sur].type===\"mcqs\"){\n              if(res.survey[sur].questions[qno]?.options[opt].answer){\n                this.questions[qno].options[opt]['count'] = this.questions[qno].options[opt]['count'] + 1\n              }\n            }else if(res.survey[sur].type===\"agreedisagree\"){\n              if(res.survey[sur].questions[qno]?.options[0]===\"true\"){\n                this.questions[qno].options[0]['count'] = this.questions[qno].options[0]['count']+1\n              }else{\n                this.questions[qno].options[1]['count'] = this.questions[qno].options[1]['count']+1\n              }\n            }else if(res.survey[sur].type===\"shortanswer\"){\n              this.questions[qno].options.push(res.survey[sur].questions[qno].options[0])\n            }\n          }\n        }\n      }\n      this.rec = rec\n      \n      \n      // for(let i=0;i<res.survey[0].questions.length;i++){\n      //   let rec={\n      //     title:res.survey[0].questions[i].title,\n      //     options:{...res.survey[0].questions[i].options,count:0}\n      //   }\n      //   for(let j=0;j<res.survey[0].questions[i].options.length;j++){\n      //     for(let k=0;k<res.survey;k++){\n      //       if(res.survey[k].questions[i].options[j].answer===true){\n      //         rec.options[j].count++\n      //         console.log(\"dwd\",res.survey[k].questions[i].options[j].answer)\n      //       }\n      //     }\n      //   }\n      //   console.log(\"rec\",rec)\n      // }\n    })\n\n  }\n  round(r){\n    return Math.round(r*100)/100\n  }\n  export_xlsx(element) {\n    var tab_text = '<html xmlns:x=\"urn:schemas-microsoft-com:office:excel\">';\n    tab_text = tab_text + '<head><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet>';\n  \n    tab_text = tab_text + '<x:Name>Record Sheet</x:Name>';\n  \n    tab_text = tab_text + '<x:WorksheetOptions><x:Panes></x:Panes></x:WorksheetOptions></x:ExcelWorksheet>';\n    tab_text = tab_text + '</x:ExcelWorksheets></x:ExcelWorkbook></xml></head><body>';\n  \n    tab_text = tab_text + \"<table border='1px'>\";\n    tab_text = tab_text + document.getElementById(element).innerHTML;\n    tab_text = tab_text + '</table></body></html>';\n  \n    var data_type = 'data:application/vnd.ms-excel';\n  \n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \");\n  \n    if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./)) {\n        if (window.navigator.msSaveBlob) {\n            var blob = new Blob([tab_text], {\n                type: \"application/csv;charset=utf-8;\"\n            });\n            navigator.msSaveBlob(blob, 'Record.xls');\n        }\n    } else {\n      var downloadLink = document.createElement(\"a\");\n      document.body.appendChild(downloadLink);\n      downloadLink.href = data_type + ', ' + encodeURIComponent(tab_text);\n          downloadLink.download = 'Test file.xls';\n          downloadLink.click();\n    }\n  }\n\n}\n","<div class=\"record-wrapper\">\n    <table  *ngIf=\"rec && rec.length && surveyType\" class=\"table-record\" id=\"exportContent\">\n        <thead>\n            <tr>\n                <th></th>\n                <th class=\"table-h\">Total</th>\n                <th class=\"table-h\">%</th>\n            </tr>\n        </thead>\n        <tbody *ngFor=\"let qnos of questions\">\n            <tr class=\"qno-head\">\n                <td colspan=\"3\" class=\"qno-head-title\">{{qnos.title}}</td>\n            </tr>\n            <tr *ngFor=\"let opts of qnos.options\">\n                <td *ngIf=\"!(surveyType==='shortanswer')\" class=\"normal-body\">{{opts.option}}</td>\n                <td *ngIf=\"!(surveyType==='shortanswer')\" class=\"normal-body\">{{opts.count ? opts.count : 0}}</td>\n                <td *ngIf=\"!(surveyType==='shortanswer')\" class=\"normal-body\">{{opts.count ? round((opts.count/rec.length)*100) : 0}}%</td>\n                <td *ngIf=\"surveyType==='shortanswer'\" colspan=\"3\" class=\"normal-body shortans\">{{opts}}</td> \n            </tr>\n        </tbody>\n    </table>\n    <button class=\"exportbtn\" color=\"primary\" *ngIf=\"rec && rec.length && surveyType\" (click)=\"export_xlsx('exportContent')\" mat-raised-button>Export</button>\n    <div *ngIf=\"!rec\">No Records Found</div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport '@angular/compiler';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}